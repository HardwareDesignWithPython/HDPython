-- XGEN: Autogenerated File

library IEEE;
library UNISIM;
library work;
use IEEE.numeric_std.all;
use IEEE.std_logic_1164.all;
use UNISIM.VComponents.all;
use ieee.std_logic_unsigned.all;
use work.HDPython_core.all;


package Counter_cl_pack is 

-------------------------------------------------------------------------
------- Start Psuedo Class Counter_cl -------------------------

type Counter_cl is record 
    counter : std_logic_vector(31 downto 0);
    counter_max : std_logic_vector(31 downto 0);
    state : counter_state;
end record;
    
    
  constant Counter_cl_null : Counter_cl:= (
    counter => (others => '0'),
    counter_max => (others => '0'),
    state => idle
  );


    type Counter_cl_a is array (natural range <>) of Counter_cl;
        

  procedure pull (self :  inout  Counter_cl);
-- empty procedure removed. name: 'push'
  procedure pull (self :  inout  Counter_cl_a);
-- empty procedure removed. name: 'push'
  procedure reset_0 (self :  inout  Counter_cl);
  function isDone_0 (self :   Counter_cl) return boolean;
  procedure count_to_max_00 (self :  inout  Counter_cl; maxValue :  in  std_logic_vector(31 downto 0));
------- End Psuedo Class Counter_cl -------------------------
-------------------------------------------------------------------------


end Counter_cl_pack;


package body Counter_cl_pack is

-------------------------------------------------------------------------
------- Start Psuedo Class Counter_cl -------------------------
procedure pull (self :  inout  Counter_cl) is
   
  begin 
 
    
-- Start Connecting

-- End Connecting
    
    if (self.state = running) then 
      self.counter := self.counter + 1;
      
    end if;
  
             
end procedure;

-- empty procedure removed. name: 'push'
procedure pull (self :  inout  Counter_cl_a) is
   
  begin 
 
        for i in 0 to self'length - 1 loop
        pull( self =>  self(i));
        end loop;
             
end procedure;

-- empty procedure removed. name: 'push'
procedure count_to_max_00 (self :  inout  Counter_cl; maxValue :  in  std_logic_vector(31 downto 0)) is
   
  begin 
 
    if (self.state = idle) then 
      self.counter :=  (others => '0');
      self.counter_max := maxValue;
      self.state := running;
      
    end if;
   
end procedure;

function isDone_0 (self :   Counter_cl) return boolean is
   
  begin 
 return self.state = done;
   
end function;

procedure reset_0 (self :  inout  Counter_cl) is
   
  begin 
 
    if (self.state = done) then 
      self.state := idle;
      
    end if;
   
end procedure;

------- End Psuedo Class Counter_cl -------------------------
  -------------------------------------------------------------------------


end Counter_cl_pack;

