-- XGEN: Autogenerated File

library IEEE;
library work;
use IEEE.numeric_std.all;
use IEEE.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use work.HDPython_core.all;
use work.axisStream_slv32.all;
use work.reg_handle_pack.all;
use work.v_symbol_pack.all;


entity command_reader is 
  port(
    Ax_data_out_s2m :  in  axiStream_slv32_s2m := axiStream_slv32_s2m_ctr;
    Ax_data_out_m2s :  out  axiStream_slv32_m2s := axiStream_slv32_m2s_ctr;
    Ax_in_s2m :  out  axiStream_slv32_s2m := axiStream_slv32_s2m_ctr;
    Ax_in_m2s :  in  axiStream_slv32_m2s := axiStream_slv32_m2s_ctr;
    clk :  in  std_logic := std_logic_ctr(0, 1)
  );
end entity;



architecture rtl of command_reader is

--------------------------command_reader-----------------
--------------------------cmd-----------------
  signal   cmd_Ax_in_s2m : axiStream_slv32_s2m := axiStream_slv32_s2m_ctr;
  signal   cmd_Ax_in_m2s : axiStream_slv32_m2s := axiStream_slv32_m2s_ctr;
  signal   cmd_Ax_out_s2m : axiStream_slv32_s2m := axiStream_slv32_s2m_ctr;
  signal   cmd_Ax_out_m2s : axiStream_slv32_m2s := axiStream_slv32_m2s_ctr;
  signal   cmd_DevHandle_s2m : reg_handle_s2m := reg_handle_s2m_ctr;
  signal   cmd_DevHandle_m2s : reg_handle_m2s := reg_handle_m2s_ctr;
-------------------------- end cmd-----------------
-------------------------- end command_reader-----------------

begin
  -- begin architecture
  -- end architecture

  cmd : entity work.command_handler_base port map (
    Ax_in_s2m => cmd_Ax_in_s2m,
    Ax_in_m2s => cmd_Ax_in_m2s,
    Ax_out_s2m => cmd_Ax_out_s2m,
    Ax_out_m2s => cmd_Ax_out_m2s,
    DevHandle_s2m => cmd_DevHandle_s2m,
    DevHandle_m2s => cmd_DevHandle_m2s,
    clk => clk
  );
  ---------------------------------------------------------------------
--  Ax_data_out << cmd_Ax_out
Ax_data_out_m2s <= cmd_Ax_out_m2s;
cmd_Ax_out_s2m <= Ax_data_out_s2m;
  ---------------------------------------------------------------------
--  cmd_Ax_in << Ax_in
cmd_Ax_in_m2s <= Ax_in_m2s;
Ax_in_s2m <= cmd_Ax_in_s2m;
  
end architecture;