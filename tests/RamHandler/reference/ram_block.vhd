-- XGEN: Autogenerated File

library IEEE;
library work;
use IEEE.numeric_std.all;
use IEEE.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use work.HDPython_core.all;
use work.ram_handler_pack.all;
use work.v_symbol_pack.all;


entity ram_block is 
  port(
    DataIO_s2m :  out  ram_handler_s2m := ram_handler_s2m_ctr;
    DataIO_m2s :  in  ram_handler_m2s := ram_handler_m2s_ctr;
    clk :  in  std_logic := std_logic_ctr(0, 1)
  );
end entity;



architecture rtl of ram_block is

--------------------------ram_block-----------------
  signal mem : slv32_a(0 to 10 - 1)  := (others => (others => '0'));
-------------------------- end ram_block-----------------

begin
  -- begin architecture
  
-----------------------------------
proc : process(clk) is
  
  begin
  
  if rising_edge(clk) then
  
      if (to_bool(DataIO_m2s.write_enable) ) then 
        mem(to_integer(signed( DataIO_m2s.Write_address))) <= DataIO_m2s.Write_Data;
        
      end if;
    DataIO_s2m.read_data <= mem(to_integer(signed( DataIO_m2s.read_address)));
    
  end if;
  
  
  end process;
  -- end architecture

end architecture;