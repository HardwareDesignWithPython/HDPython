-- XGEN: Autogenerated File

library IEEE;
library work;
use IEEE.numeric_std.all;
use IEEE.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use work.HDPython_core.all;
use work.v_symbol_pack.all;


package optional_t_pack is 

-------------------------------------------------------------------------
------- Start Psuedo Class optional_t -------------------------

type optional_t is record 
    data : slv32;
    valid : std_logic;
end record;
    
    
  constant optional_t_null : optional_t:= (
    data => std_logic_vector_ctr(0, 32),
    valid => std_logic_ctr(0, 1)
  );


    type optional_t_a is array (natural range <>) of optional_t;
        

  function optional_t_ctr  return optional_t;
-- empty procedure removed. name: 'pull'
-- empty procedure removed. name: 'push'
-- empty procedure removed. name: 'pull'
-- empty procedure removed. name: 'push'
-- empty procedure removed. name: 'enter_rising_edge'
-- empty procedure removed. name: 'exit_rising_edge'
  function to_bool (self : optional_t) return boolean;
  procedure set_inValid_0 (self :  inout  optional_t);
  function is_valid_0 (self : optional_t) return boolean;
  procedure set_value_00_lshift (self :  inout  optional_t; rhs :  in  std_logic_vector);
  procedure reset_0 (self :  inout  optional_t);
------- End Psuedo Class optional_t -------------------------
-------------------------------------------------------------------------


end optional_t_pack;


package body optional_t_pack is

-------------------------------------------------------------------------
------- Start Psuedo Class optional_t -------------------------
function optional_t_ctr  return optional_t is
    variable ret : optional_t := optional_t_null; 
  begin 
     return ret;
 
end function;

-- empty procedure removed. name: 'pull'
-- empty procedure removed. name: 'push'
-- empty procedure removed. name: 'pull'
-- empty procedure removed. name: 'push'
-- empty procedure removed. name: 'enter_rising_edge'
-- empty procedure removed. name: 'exit_rising_edge'
procedure reset_0 (self :  inout  optional_t) is
   
  begin 
 self.valid := '0';
   
end procedure;

procedure set_value_00_lshift (self :  inout  optional_t; rhs :  in  std_logic_vector) is
   
  begin 
 self.valid := '1';
  self.data := rhs;
   
end procedure;

function is_valid_0 (self : optional_t) return boolean is
   
  begin 
 return self.valid = '1';
   
end function;

procedure set_inValid_0 (self :  inout  optional_t) is
   
  begin 
 self.valid := '0';
   
end procedure;

function to_bool (self : optional_t) return boolean is
   
  begin 
 return is_valid_0(self => self);
   
end function;

------- End Psuedo Class optional_t -------------------------
  -------------------------------------------------------------------------


end optional_t_pack;

