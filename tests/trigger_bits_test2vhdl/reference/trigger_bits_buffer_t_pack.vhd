-- XGEN: Autogenerated File

library IEEE;
library work;
use IEEE.numeric_std.all;
use IEEE.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use work.HDPython_core.all;
use work.v_symbol_pack.all;


package trigger_bits_buffer_t_pack is 

-------------------------------------------------------------------------
------- Start Psuedo Class trigger_bits_buffer_t -------------------------

type trigger_bits_buffer_t_sig is record 
    tb_buffer : slv5_a(0 to 10 - 1 );
    trigger_mask : slv10;
end record;
    
    
  constant trigger_bits_buffer_t_sig_null : trigger_bits_buffer_t_sig:= (
    tb_buffer => (others => (others => '0')),
    trigger_mask => std_logic_vector_ctr(0, 10)
  );


    type trigger_bits_buffer_t_sig_a is array (natural range <>) of trigger_bits_buffer_t_sig;
        

-- v_list getHeader
  function trigger_bits_buffer_t_sig_ctr  return trigger_bits_buffer_t_sig;
  procedure pull (signal clk : in std_logic;  signal self_sig :  inout  trigger_bits_buffer_t_sig);
  procedure push (signal clk : in std_logic;  signal self_sig :  inout  trigger_bits_buffer_t_sig);
  procedure pull (signal clk  : in std_logic; signal self_sig :  inout  trigger_bits_buffer_t_sig_a);
  procedure push (signal clk  : in std_logic; signal self_sig :  inout  trigger_bits_buffer_t_sig_a);
  function rising_edge_0 (
   Signal self_sig : trigger_bits_buffer_t_sig
 ) return boolean;
  function get_trigger_bits_0 (
   Signal self_sig : trigger_bits_buffer_t_sig
 ) return std_logic_vector;
  function get_trigger_bits_1 (
   Signal self_sig : trigger_bits_buffer_t_sig
 ) return std_logic_vector;
  function rising_edge_1 (
   Signal self_sig : trigger_bits_buffer_t_sig
 ) return boolean;
  procedure set_trigger_mask_11 (Signal self_sig :  inout  trigger_bits_buffer_t_sig; signal trigger_mask :  in  std_logic_vector);
  procedure push_back_11 (Signal self_sig :  inout  trigger_bits_buffer_t_sig; signal data_in :  in  std_logic_vector);
------- End Psuedo Class trigger_bits_buffer_t -------------------------
-------------------------------------------------------------------------


end trigger_bits_buffer_t_pack;


package body trigger_bits_buffer_t_pack is

-------------------------------------------------------------------------
------- Start Psuedo Class trigger_bits_buffer_t -------------------------
function trigger_bits_buffer_t_sig_ctr  return trigger_bits_buffer_t_sig is
    variable ret : trigger_bits_buffer_t_sig := trigger_bits_buffer_t_sig_null; 
  begin 
     return ret;
 
end function;

procedure pull (signal clk : in std_logic;  signal self_sig :  inout  trigger_bits_buffer_t_sig) is
   
  begin 
 

-- Start Connecting

-- End Connecting

         
end procedure;

procedure push (signal clk : in std_logic;  signal self_sig :  inout  trigger_bits_buffer_t_sig) is
   
  begin 
 

-- Start Connecting

-- End Connecting

         
end procedure;

procedure pull (signal clk  : in std_logic; signal self_sig :  inout  trigger_bits_buffer_t_sig_a) is
   
  begin 
 
        for i in 0 to self'length - 1 loop
        pull( clk => clk, self_sig =>  self_sig(i));
        end loop;
             
end procedure;

procedure push (signal clk  : in std_logic; signal self_sig :  inout  trigger_bits_buffer_t_sig_a) is
   
  begin 
 
        for i in 0 to self'length - 1 loop
        push( clk => clk, self_sig =>  self_sig(i));
        end loop;
             
end procedure;

procedure push_back_11 (Signal self_sig :  inout  trigger_bits_buffer_t_sig; signal data_in :  in  std_logic_vector) is
   
  begin 
 self_sig.tb_buffer <= data_in & self_sig.tb_buffer(1 to self_sig.tb_buffer'length -1 );
   
end procedure;

procedure set_trigger_mask_11 (Signal self_sig :  inout  trigger_bits_buffer_t_sig; signal trigger_mask :  in  std_logic_vector) is
   
  begin 
 self_sig.trigger_mask <= trigger_mask;
   
end procedure;

function rising_edge_1 (
   Signal self_sig : trigger_bits_buffer_t_sig
 ) return boolean is
   
  begin 
 return ( self_sig.tb_buffer(0) = 0 and self_sig.tb_buffer(1) > 0) ;
   
end function;

function get_trigger_bits_1 (
   Signal self_sig : trigger_bits_buffer_t_sig
 ) return std_logic_vector is
  variable ret : std_logic_vector(5 -1 downto 0) := std_logic_vector_ctr(0, 32); 
 
  begin 
 for i1 in 0 to self_sig.tb_buffer'length -1 loop 
      
      if (to_bool(self_sig.trigger_mask(to_integer(signed( self_sig.tb_buffer(i1))))) ) then 
        ret := ( to_bool(ret)  or to_bool(self_sig.tb_buffer(to_integer(signed( self_sig.tb_buffer(i1))))) ) ;
        
      end if;
    end loop;
  return ret;
   
end function;

function get_trigger_bits_0 (
   Signal self_sig : trigger_bits_buffer_t_sig
 ) return std_logic_vector is
  variable ret : std_logic_vector(5 -1 downto 0) := std_logic_vector_ctr(0, 32); 
 
  begin 
 for i2 in 0 to self_sig.tb_buffer'length -1 loop 
      
      if (to_bool(self_sig.trigger_mask(to_integer(signed( self_sig.tb_buffer(i2))))) ) then 
        ret := ( to_bool(ret)  or to_bool(self_sig.tb_buffer(to_integer(signed( self_sig.tb_buffer(i2))))) ) ;
        
      end if;
    end loop;
  return ret;
   
end function;

function rising_edge_0 (
   Signal self_sig : trigger_bits_buffer_t_sig
 ) return boolean is
   
  begin 
 return ( self_sig.tb_buffer(0) = 0 and self_sig.tb_buffer(1) > 0) ;
   
end function;

------- End Psuedo Class trigger_bits_buffer_t -------------------------
  -------------------------------------------------------------------------


end trigger_bits_buffer_t_pack;

