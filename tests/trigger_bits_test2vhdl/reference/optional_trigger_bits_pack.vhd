-- XGEN: Autogenerated File

library IEEE;
library work;
use IEEE.numeric_std.all;
use IEEE.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use work.HDPython_core.all;
use work.v_symbol_pack.all;


package optional_trigger_bits_pack is 

-------------------------------------------------------------------------
------- Start Psuedo Class optional_trigger_bits -------------------------

type optional_trigger_bits is record 
    TriggerBits : slv5_a(0 to 10 - 1 );
    valid : std_logic;
end record;
    
    
  constant optional_trigger_bits_null : optional_trigger_bits:= (
    TriggerBits => (others => (others => '0')),
    valid => std_logic_ctr(0, 1)
  );


    type optional_trigger_bits_a is array (natural range <>) of optional_trigger_bits;
        

-- v_list getHeader
  function optional_trigger_bits_ctr  return optional_trigger_bits;
  procedure pull_01 (self : inout optional_trigger_bits; signal data_IO :  in  optional_trigger_bits);
  procedure push_01 (self : inout optional_trigger_bits; signal data_IO :  out  optional_trigger_bits);
  procedure pull_11 (signal self : inout optional_trigger_bits; signal data_IO :  in  optional_trigger_bits);
  procedure push_11 (signal self : inout optional_trigger_bits; signal data_IO :  out  optional_trigger_bits);
------- End Psuedo Class optional_trigger_bits -------------------------
-------------------------------------------------------------------------


end optional_trigger_bits_pack;


package body optional_trigger_bits_pack is

-------------------------------------------------------------------------
------- Start Psuedo Class optional_trigger_bits -------------------------
function optional_trigger_bits_ctr  return optional_trigger_bits is
    variable ret : optional_trigger_bits := optional_trigger_bits_null; 
  begin 
     return ret;
 
end function;

procedure pull_01 (self : inout optional_trigger_bits; signal data_IO :  in  optional_trigger_bits) is
   
  begin 
 self   :=  data_IO; 
end procedure;

procedure push_01 (self : inout optional_trigger_bits; signal data_IO :  out  optional_trigger_bits) is
   
  begin 
 data_IO  <=  self; 
end procedure;

procedure pull_11 (signal self : inout optional_trigger_bits; signal data_IO :  in  optional_trigger_bits) is
   
  begin 
 self   <=  data_IO; 
end procedure;

procedure push_11 (signal self : inout optional_trigger_bits; signal data_IO :  out  optional_trigger_bits) is
   
  begin 
 data_IO  <=  self; 
end procedure;

------- End Psuedo Class optional_trigger_bits -------------------------
  -------------------------------------------------------------------------


end optional_trigger_bits_pack;

