-- XGEN: Autogenerated File

library IEEE;
library work;
use IEEE.numeric_std.all;
use IEEE.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use work.HDPython_core.all;
use work.v_symbol_pack.all;


package NativeFifoOut_pack is 

-------------------------------------------------------------------------
------- Start Psuedo Class NativeFifoOut -------------------------

type NativeFifoOut_s2m is record 
    enable : std_logic;
end record;
    
    
  constant NativeFifoOut_s2m_null : NativeFifoOut_s2m:= (
    enable => std_logic_ctr(0, 1)
  );


    type NativeFifoOut_s2m_a is array (natural range <>) of NativeFifoOut_s2m;
        


type NativeFifoOut_m2s is record 
    data : slv32;
    empty : std_logic;
end record;
    
    
  constant NativeFifoOut_m2s_null : NativeFifoOut_m2s:= (
    data => std_logic_vector_ctr(0, 32),
    empty => std_logic_ctr(0, 1)
  );


    type NativeFifoOut_m2s_a is array (natural range <>) of NativeFifoOut_m2s;
        


type NativeFifoOut is record 
    data : slv32;
    empty : std_logic;
    enable : std_logic;
end record;
    
    
  constant NativeFifoOut_null : NativeFifoOut:= (
    data => std_logic_vector_ctr(0, 32),
    empty => std_logic_ctr(0, 1),
    enable => std_logic_ctr(0, 1)
  );


    type NativeFifoOut_a is array (natural range <>) of NativeFifoOut;
        

  function NativeFifoOut_s2m_ctr  return NativeFifoOut_s2m;
  function NativeFifoOut_m2s_ctr  return NativeFifoOut_m2s;
  function NativeFifoOut_ctr  return NativeFifoOut;
  procedure pull_01 (self : inout NativeFifoOut ; signal IO_data :  in NativeFifoOut_s2m);
  procedure push_01 (self : inout NativeFifoOut ; signal IO_data :  out NativeFifoOut_m2s);
  procedure pull_01 (self : inout NativeFifoOut ; signal IO_data :  out NativeFifoOut_m2s);
  procedure push_01 (self : inout NativeFifoOut ; signal IO_data :  in NativeFifoOut_s2m);
  procedure pull_11 (signal  self : inout NativeFifoOut ; signal IO_data :  in NativeFifoOut_s2m);
  procedure push_11 (signal  self : inout NativeFifoOut ; signal IO_data :  out NativeFifoOut_m2s);
  procedure pull_11 (signal  self : inout NativeFifoOut ; signal IO_data :  out NativeFifoOut_m2s);
  procedure push_11 (signal  self : inout NativeFifoOut ; signal IO_data :  in NativeFifoOut_s2m);
------- End Psuedo Class NativeFifoOut -------------------------
-------------------------------------------------------------------------


end NativeFifoOut_pack;


package body NativeFifoOut_pack is

-------------------------------------------------------------------------
------- Start Psuedo Class NativeFifoOut -------------------------
function NativeFifoOut_s2m_ctr  return NativeFifoOut_s2m is
    variable ret : NativeFifoOut_s2m := NativeFifoOut_s2m_null; 
  begin 
     return ret;
 
end function;

function NativeFifoOut_m2s_ctr  return NativeFifoOut_m2s is
    variable ret : NativeFifoOut_m2s := NativeFifoOut_m2s_null; 
  begin 
     return ret;
 
end function;

function NativeFifoOut_ctr  return NativeFifoOut is
    variable ret : NativeFifoOut := NativeFifoOut_null; 
  begin 
     return ret;
 
end function;

procedure pull_01 (self : inout NativeFifoOut ; signal IO_data :  in NativeFifoOut_s2m) is
   
  begin 
     pull_01(self.enable, IO_data.enable);
 
end procedure;

procedure push_01 (self : inout NativeFifoOut ; signal IO_data :  out NativeFifoOut_m2s) is
   
  begin 
     push_01(self.data, IO_data.data);
    push_01(self.empty, IO_data.empty);
 
end procedure;

procedure pull_01 (self : inout NativeFifoOut ; signal IO_data :  out NativeFifoOut_m2s) is
   
  begin 
     pull_01(self.data, IO_data.data);
    pull_01(self.empty, IO_data.empty);
 
end procedure;

procedure push_01 (self : inout NativeFifoOut ; signal IO_data :  in NativeFifoOut_s2m) is
   
  begin 
     push_01(self.enable, IO_data.enable);
 
end procedure;

procedure pull_11 (signal  self : inout NativeFifoOut ; signal IO_data :  in NativeFifoOut_s2m) is
   
  begin 
     pull_11(self.enable, IO_data.enable);
 
end procedure;

procedure push_11 (signal  self : inout NativeFifoOut ; signal IO_data :  out NativeFifoOut_m2s) is
   
  begin 
     push_11(self.data, IO_data.data);
    push_11(self.empty, IO_data.empty);
 
end procedure;

procedure pull_11 (signal  self : inout NativeFifoOut ; signal IO_data :  out NativeFifoOut_m2s) is
   
  begin 
     pull_11(self.data, IO_data.data);
    pull_11(self.empty, IO_data.empty);
 
end procedure;

procedure push_11 (signal  self : inout NativeFifoOut ; signal IO_data :  in NativeFifoOut_s2m) is
   
  begin 
     push_11(self.enable, IO_data.enable);
 
end procedure;

------- End Psuedo Class NativeFifoOut -------------------------
  -------------------------------------------------------------------------


end NativeFifoOut_pack;

