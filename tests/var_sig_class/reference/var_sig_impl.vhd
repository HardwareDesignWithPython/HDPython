-- XGEN: Autogenerated File

library IEEE;
library UNISIM;
library work;
use IEEE.numeric_std.all;
use IEEE.std_logic_1164.all;
use UNISIM.VComponents.all;
use ieee.std_logic_unsigned.all;
use work.Var_sig_class_pack.all;
use work.HDPython_base.all;


entity var_sig_impl is 
  port(
    clk :  in  std_logic := '0'
  );
end entity;



architecture rtl of var_sig_impl is

--------------------------var_sig_impl-----------------
  signal data : std_logic_vector(31 downto 0) := (others => '0'); 
  signal vs_clas_sig : Var_sig_class_sig := Var_sig_class_sig_null;
-------------------------- end var_sig_impl-----------------

begin
  -- begin architecture
  
-----------------------------------
proc : process(clk) is
  variable vs_clas : Var_sig_class := Var_sig_class_null;
  begin
    if rising_edge(clk) then 
  vs_clas_sig.sTest3 <= data;
    vs_clas.vTest3 := data;
    f1_0(self_sig => vs_clas_sig, self_sig_sTest1 => vs_clas_sig.sTest1, self => vs_clas);
    f2_01(self_sig => vs_clas_sig, self_sig_sTest2 => vs_clas_sig.sTest2, self => vs_clas, x => data);
    data <= data + 1;
    end if;
  
  end process;
  -- end architecture

end architecture;