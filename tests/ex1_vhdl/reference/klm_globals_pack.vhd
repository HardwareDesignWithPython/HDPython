-- XGEN: Autogenerated File

library IEEE;
library work;
use IEEE.numeric_std.all;
use IEEE.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use work.HDPython_core.all;
use work.register_t_pack.all;
use work.v_symbol_pack.all;


package klm_globals_pack is 

-------------------------------------------------------------------------
------- Start Psuedo Class klm_globals -------------------------

type klm_globals is record 
    reg : register_t;
    rst : std_logic;
end record;
    
    
  constant klm_globals_null : klm_globals:= (
    reg => register_t_ctr,
    rst => std_logic_ctr(0, 1)
  );


    type klm_globals_a is array (natural range <>) of klm_globals;
        



  function klm_globals_ctr  return klm_globals;
  procedure pull_01 (signal clk: in std_logic; self : inout klm_globals; signal data_IO :  in  klm_globals);
  procedure push_01 (signal clk: in std_logic; self : inout klm_globals; signal data_IO :  out  klm_globals);
  procedure pull_11 (signal clk: in std_logic;  signal self : inout klm_globals; signal data_IO :  in  klm_globals);
  procedure push_11 (signal clk: in std_logic;  signal self : inout klm_globals; signal data_IO :  out  klm_globals);
------- End Psuedo Class klm_globals -------------------------
-------------------------------------------------------------------------


end klm_globals_pack;


package body klm_globals_pack is

-------------------------------------------------------------------------
------- Start Psuedo Class klm_globals -------------------------
function klm_globals_ctr  return klm_globals is
    variable ret : klm_globals := klm_globals_null; 
  begin 
     return ret;
 
end function;

procedure pull_01 (signal clk: in std_logic; self : inout klm_globals; signal data_IO :  in  klm_globals) is
   
  begin 
 self   :=  data_IO; 
end procedure;

procedure push_01 (signal clk: in std_logic; self : inout klm_globals; signal data_IO :  out  klm_globals) is
   
  begin 
 data_IO  <=  self; 
end procedure;

procedure pull_11 (signal clk: in std_logic;  signal self : inout klm_globals; signal data_IO :  in  klm_globals) is
   
  begin 
 self   <=  data_IO; 
end procedure;

procedure push_11 (signal clk: in std_logic;  signal self : inout klm_globals; signal data_IO :  out  klm_globals) is
   
  begin 
 data_IO  <=  self; 
end procedure;

------- End Psuedo Class klm_globals -------------------------
  -------------------------------------------------------------------------


end klm_globals_pack;

